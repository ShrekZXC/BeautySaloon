@model List<BeautySaloon.ViewModel.WorkScheduleViewModel>

@{
Layout = null;
}
<html lang="ru">
    @Html.Partial("_AdminHeadPartial")


@Html.Partial("_HeaderPartial")

<body>
<input type="hidden" id="workerId" value="@ViewBag.WorkerId" />
<input type="hidden" id="workerName" value="@ViewBag.WorkerName" />
<div class="container">
    <div id="calendar"></div>
</div>

@Html.Partial("_EventModalPartial")

<script>
    const myModalEl = document.getElementById('eventModal')
    const myModal = new bootstrap.Modal(myModalEl)
    const deleteEventButton = $('#deleteEventButton');
    const closeEventButton = $('#closeEventButton');
    const saveEventButton = $('#saveEventButton');
    
    
    document.addEventListener('DOMContentLoaded', function() {
        var initialLocaleCode = 'ru';
        var calendarEl = document.getElementById('calendar');
        var workerId = document.getElementById('workerId').value;
        var workerName = document.getElementById('workerName').value;

        var events = @Html.Raw(Json.Serialize(
                         Model.Select(schedule => new
                         {
                             publicId = schedule.Id,
                             title = $"Клиент: {schedule.Client.FullName} Услуга: {schedule.Service.Name}",
                             start = schedule.WorkDate.ToString("yyyy-MM-dd") + "T" + schedule.StartTime,
                             end = schedule.WorkDate.ToString("yyyy-MM-dd") + "T" + schedule.EndTime
                         })
                     ));

        var calendar = new FullCalendar.Calendar(calendarEl, {
            locale: initialLocaleCode,
            initialView: 'timeGridWeek',
            headerToolbar: {
                start: 'timeGridWeek',
                center: 'title',
                end: 'prev,next'
            },
            buttonText: {
                today: 'Сегодня',
                month: 'Месяц',
                week: 'Неделя',
                day: 'День',
                list: 'Список'
            },
            weekText: 'Нед',
            allDayText: 'Весь день',
            moreLinkText: function(n) {
                return '+ ещё ' + n;
            },
            titleFormat: function(date) {
                return workerName + ' - ' + date.start.marker.toLocaleDateString('ru', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                }) + ' - ' + date.end.marker.toLocaleDateString('ru', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                });
            },
            noEventsText: 'Нет событий для отображения',
            events: events,
            dateClick: function(info) {
                deleteEventButton.hide();
                loadServices();
                loadClients(); // Загрузка пользователей перед показом модального окна
                var dataFromModal;
                myModal.show();

                closeEventButton.click(function ()
                {
                    myModal.hide();
                });

                saveEventButton.click(function() {
                    console.log("Нажатие на сохранение новой записи");
                        const clientId = document.getElementById('userSelect').value;
                        const serviceId = document.getElementById('serviceSelect').value;
                        const startTime = document.getElementById('startTime').value;
                        
                        dataFromModal = {
                            workerId: workerId,
                            clientId: clientId,
                            serviceId: serviceId,
                            workDate: info.dateStr,
                            startTime: startTime
                        };
                        myModal.hide();
                        document.getElementById('saveEventButton').removeEventListener('click', handleSaveClick);
                    
                    $.ajax({
                        url: '@Url.Action("SaveSchedule", "AdminSchedule")',
                        method: 'POST',
                        data: dataFromModal,
                        success: function (data )
                        {
                            var newEvent = {
                                publicId: data.id,
                                title: data.title,
                                start: data.start,
                                end: data.end
                            };
                            calendar.addEvent(newEvent);
                            calendar.refetchEvents(); // Перезагрузка событий календаря
                        },
                        error: function ()
                        {
                            alert("Ошибка при добавлении данных");
                        }
                    })
                });
            },
            eventClick: function(info) {
            $('#eventId').val(info.event._def.extendedProps.publicId);
            
                deleteEventButton.show();
                var event = info.event;
                loadServices();
                loadClients();
                loadInfoAboutSchedule(event._def.extendedProps.publicId);

                deleteEventButton.click(function() {
                    console.log("Нажатие");
                        $.ajax({
                            url: '@Url.Action("DeleteById", "AdminSchedule")',
                            type: 'POST',
                            data: {
                                id: info.event._def.extendedProps.publicId
                            },
                            success: function(result) {
                                if (result) {
                                event.remove();
                                calendar.refetchEvents();
                                    alert('Событие успешно удалено');
                                    myModal.hide();
                                } else {
                                    alert('Произошла ошибка при удалении события');
                                }
                            },
                            error: function(xhr, status, error) {
                            console.log(error);
                                alert('Произошла ошибка при удалении события');
                            }
                        });
                    });

                saveEventButton.click(function ()
                {
                console.log("Нажатие на сохранение изменений");
                    var eventId = info.event._def.extendedProps.publicId;
                    const clientId = document.getElementById('userSelect').value;
                    const serviceId = document.getElementById('serviceSelect').value;
                    const startTime = document.getElementById('startTime').value;

                    var dataFromModal = {
                        eventId: eventId,
                        workerId: workerId,
                        clientId: clientId,
                        serviceId: serviceId,
                        startTime: startTime
                    };

                    $.ajax({
                        url: '@Url.Action("UpdateSchedule", "AdminSchedule")',
                        method: 'POST',
                        data: dataFromModal,
                        success: function (data )
                        {
                            var updateEvent = {
                                publicId: data.id,
                                title: data.title,
                                start: data.start,
                                end: data.end
                            };
                            event.setStart(updateEvent.start);
                            event.setEnd(updateEvent.end);
                            event.setProp('title',updateEvent.title);
                            calendar.refetchEvents(); // Перезагрузка событий календаря
                            myModal.hide();
                        },
                        error: function ()
                        {
                            alert("Ошибка при добавлении данных");
                        }
                    })
                    
                });

                closeEventButton.click(function ()
                {
                myModal.hide();
                });
                
                myModal.show();
            }
        });

        calendar.render();

        function loadClients() {
            $.ajax({
                url: '@Url.Action("GetAllClients", "AdminSchedule")',
                method: 'GET',
                success: function(data) {
                    var userSelect = document.getElementById('userSelect');
                    userSelect.innerHTML = ''; // Очистка списка
                    data.forEach(function(user) {
                        var option = document.createElement('option');
                        option.value = user.id;
                        option.textContent = user.fullName;
                        userSelect.appendChild(option);
                    });
                },
                error: function() {
                    alert("Ошибка при загрузке пользователей");
                }
            });
        }

        function loadServices() {
            $.ajax({
                url: '@Url.Action("GetAllService", "AdminSchedule")',
                method: 'GET',
                success: function(data) {
                    var serviceSelect = document.getElementById('serviceSelect');
                    serviceSelect.innerHTML = ''; // Очистка списка
                    data.forEach(function(service) {
                        var option = document.createElement('option');
                        option.value = service.id;
                        option.textContent = service.name;
                        serviceSelect.appendChild(option);
                    });
                },
                error: function() {
                    alert("Ошибка при загрузке услуг");
                }
            });
        }

        function loadInfoAboutSchedule(scheduleId) {
            $.ajax({
                url: '@Url.Action("GetScheduleById", "AdminSchedule")',
                method: 'GET',
                data: {
                    scheduleId: scheduleId
                },
                success: function(data) {
                    var userSelect = document.getElementById('userSelect');
                    for (var i = 0; i < userSelect.options.length; i++) {
                        if (userSelect.options[i].value === data.client.id) {
                            userSelect.options[i].selected = true;
                            break;
                        }
                    }

                    // Заполнение поля "Услуга"
                    var serviceSelect = document.getElementById('serviceSelect');
                    for (var i = 0; i < serviceSelect.options.length; i++) {
                        if (serviceSelect.options[i].value === data.service.id) {
                            serviceSelect.options[i].selected = true;
                            break;
                        }
                    }

                    // Заполнение поля "Время начала"
                    var startTimeInput = document.getElementById('startTime');
                    startTimeInput.value = data.startTime;
                },
                error: function() {
                    alert("Ошибка при загрузке услуг");
                }
            });
        }


    });


</script>
</body>
</html>
