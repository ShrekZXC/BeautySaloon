@model BeautySaloon.ViewModel.HomeViewModel
@{
    ViewData["Title"] = "Home Page";
}

@if (Model.MainSettings != null)
{
    if (Model.MainSettings != null)
    {
        if (!string.IsNullOrEmpty(Model.MainSettings.ColorBackgroundHeader))
        {
            <style>
                header
                {
                    background-color: @Model.MainSettings.ColorBackgroundHeader !important;
                }
            </style>
        }

        if (!string.IsNullOrEmpty(Model.MainSettings.ColorTextHeader))
        {
            <style>
                header
                {
                    color: @Model.MainSettings.ColorTextHeader;
                }
            </style>
        }

        if (!string.IsNullOrEmpty(Model.MainSettings.BackgroundImageHeader))
        {
            <style>
                header
                {
                    background-image: url('@Model.MainSettings.BackgroundImageHeader');
                }
            </style>
        }

        if (!string.IsNullOrEmpty(Model.MainSettings.ColorBackgroundMain))
        {
            <style>
                main
                {
                    background-color: @Model.MainSettings.ColorBackgroundMain;
                }
                body
                {
                background-color: @Model.MainSettings.ColorBackgroundMain;
                }
            </style>
        }

        if (!string.IsNullOrEmpty(Model.MainSettings.ColorMainText))
        {
            <style>
                .main-text
                {
                    color: @Model.MainSettings.ColorMainText;
                }
            </style>
        }

        if (!string.IsNullOrEmpty(Model.MainSettings.MainBackgroundImage))
        {
            <style>
                .main-background
                {
                    background-image: url('@Model.MainSettings.MainBackgroundImage');
                }
                body
                {
                    background-image: url('@Model.MainSettings.MainBackgroundImage');
                }
            </style>
        }

        if (!string.IsNullOrEmpty(Model.MainSettings.ColorFooterText))
        {
            <style>
                footer
                {
                    color: @Model.MainSettings.ColorFooterText;
                }
            </style>
        }

        if (!string.IsNullOrEmpty(Model.MainSettings.BackgroundImageFooter))
        {
            <style>
                footer
                {
                    background-image: url('@Model.MainSettings.BackgroundImageFooter');
                }
            </style>
        }

        if (!string.IsNullOrEmpty(Model.MainSettings.ColorBackgroundFooter))
        {
            <style>
                footer
                {
                    background-color: @Model.MainSettings.ColorBackgroundFooter;
                }
            </style>
        }
    }
}
<style>
    .btn-custom {
        background-color: #695CFEFF;
        border-color: #695CFEFF;
    }
    .btn-custom:hover {
        background-color: #574BA3; /* Более темный оттенок для эффекта наведения */
        border-color: #574BA3;
    }
</style>

<header class="text-center py-5 mb-5">
    <h1>@Model?.MainSettings?.SiteName</h1>
</header>

<main class="main-background">
    <section class="container text-center">
        <p class="lead">@Model?.MainSettings?.MainText</p>
        <a href="@Url.Action("Index", "Services")" class="btn btn-primary btn-lg btn-custom">Записаться сейчас</a>
    </section>

    <section class="container my-5">
        <h2>АКЦИИ</h2>
        <div id="carouselExampleCaptions" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-indicators">
                @for (var i = 0; i < Model.PromotionsViewModel.Count; i++)
                {
                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="@i" class="@(i == 0 ? "active" : "")" aria-current="@(i == 0 ? "true" : "false")" aria-label="Slide @(i + 1)"></button>
                }
            </div>
            <div class="carousel-inner">
                @foreach (var promotion in Model.PromotionsViewModel)
                {
                var isActive = promotion == Model.PromotionsViewModel.First() ? "active" : "";
                <div class="carousel-item @isActive">
                    <img src="@promotion.ImgSrc" class="d-block w-100" alt="@promotion.Name">
                    <div class="carousel-caption d-none d-md-block text-bg">
                        <h5>@promotion.Name</h5>
                        <p>@promotion.Description</p>
                    </div>
                </div>
                }
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </section>

    <style>
        .text-bg {
            background-color: rgba(0, 0, 0, 0.5);
            color: white;
            padding: 10px;
            border-radius: 5px;
        }
        .carousel-caption h5, .carousel-caption p {
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);
        }
    </style>



    <section class="container my-5">
        <h2>Наши услуги</h2>
        <div class="row">
            @foreach (var service in Model.CategoriesViewModel)
            {
                <div class="col-md-3"> <!-- Измените col-md-3 в зависимости от количества карточек и их ширины -->
                    <div class="card mb-4">
                        <img src="@service.ImgSrc" class="card-img-top" alt="@service.Name">
                        <div class="card-body">
                            <h5 class="card-title">@service.Name</h5>
                            <a href="@Url.Action("ServiceDetails", "Services", new { id = service.Id })" class="btn btn-primary btn-custom">Подробнее</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </section>


    <section class="container my-5">
        <h2>Полезная информация</h2>
        <div class="info-block">
            <p>Добро пожаловать в наш салон красоты! Мы предлагаем широкий спектр услуг, включая стрижки, окрашивание, маникюр, педикюр и уход за кожей. Наши опытные специалисты помогут вам создать идеальный образ и подчеркнуть вашу природную красоту.</p>
            <p>Запишитесь на консультацию или процедуру по телефону +7 (123) 456-78-90 или через наш сайт. Мы всегда рады видеть вас!</p>
            <p>Время работы: с понедельника по пятницу с 10:00 до 20:00, суббота и воскресенье с 10:00 до 18:00.</p>
        </div>
    </section>

    <section class="container my-5">
        <iframe src="https://yandex.ru/map-widget/v1/?ll=92.796786%2C55.993656&mode=whatshere&whatshere%5Bpoint%5D=92.796786%2C55.993656&whatshere%5Bzoom%5D=17&z=17"
                width="100%"
                height="400"
                frameborder="1"
                allowfullscreen="true"
                style="position:relative;">
        </iframe>
    </section>
</main>

<footer class="text-center py-3">
    <p>Контакты: 
        <a href="https://vk.com" class="text-white">ВК</a>, 
        <a href="https://telegram.org" class="text-white">Телеграм</a></p>
    <p>Телефон: +7 (123) 456-78-90 | Почта: info@example.com</p>
    <p>Время работы: Пн-Пт 9:00 - 18:00</p>
</footer>

